########################################################################
# Copyright (C) 2008  Sam Danielson                                    #
#                                                                      #
# This file is part of Sqlpilot.                                       #
#                                                                      #
# Sqlpilot is free software: you can redistribute it and/or modify     #
# it under the terms of the GNU General Public License as published by #
# the Free Software Foundation, either version 3 of the License, or    #
# (at your option) any later version.                                  #
#                                                                      #
# Sqlpilot is distributed in the hope that it will be useful,          #
# but WITHOUT ANY WARRANTY; without even the implied warranty of       #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        #
# GNU General Public License for more details.                         #
#                                                                      #
# You should have received a copy of the GNU General Public License    #
# along with Sqlpilot.  If not, see <http://www.gnu.org/licenses/>.    #
########################################################################

include config.mk

SRC = src/sqlpilot.c \
      src/util.c \
      src/lib/csv.c \
      src/db/sqlite3.c \
      src/db/db.c \
      src/store.c \
      src/cb/window.c \
      src/cb/flights.c \
      src/cb/roles.c \
      src/cb/aircraft.c \
      src/cb/types.c \
      src/cb/airports.c \
      src/cb/reports.c \
      src/cb/summaries.c \
      src/logbook.c \
      src/edctrl.c \
      src/scripter.c \
      src/flights.c \
      src/roles.c \
      src/aircraft.c \
      src/types.c \
      src/airports.c \
      src/reports.c \
      src/summaries.c

APP_SRC = src/main.c ${SRC}

IMPORTCSV_SRC = src/importcsv.c ${SRC}

CONSOLE_SRC = src/console.c src/db/db.c src/db/sqlite3.c

# Example: make test db, make test-run db
TEST_SRC = test/units/$(unit)_test.c test/test.c ${SRC}

HEADERS = src/config.h \
	  src/sqlpilot.h \
	  src/util.h \
	  src/lib/csv.h \
	  src/db/sqlite3.h \
	  src/db/db.h \
          src/store.h \
	  src/cb/cb.h \
	  src/edctrl.h \
	  src/scripter.h \
	  src/logbook.h \
	  src/flights.h \
	  src/roles.h \
	  src/aircraft.h \
	  src/types.h \
	  src/airports.h \
	  src/reports.h \
	  src/summaries.h


APP_HEADERS = src/sqlpilot.h ${HEADERS}

IMPORTCSV_HEADERS = ${HEADERS}

CONSOLE_HEADERS = src/db/db.h

TEST_HEADERS = test/test.h ${HEADERS}

APP_OBJ = ${APP_SRC:.c=.o}

IMPORTCSV_OBJ = ${IMPORTCSV_SRC:.c=.o}

CONSOLE_OBJ = ${CONSOLE_SRC:.c=.o}

TEST_OBJ = ${TEST_SRC:.c=.o}

ifeq ($(USING_HILDON),true)
  UI_GLADE=data/ui/hildon_nokia.glade
else
  UI_GLADE=data/ui/gtk_full.glade
endif

build: sqlpilot importcsv console ui

src/config.h: config.mk
	@echo '/* config.h is autogenerated by Makefile */' > src/config.h
	@echo "#define VERSION_MAJOR $(VERSION_MAJOR)"      >> src/config.h
	@echo "#define VERSION_MINOR $(VERSION_MINOR)"      >> src/config.h
	@echo "#define VERSION_TINY  $(VERSION_TINY)"       >> src/config.h
	@echo "#define VERSION_STRING \"$(VERSION_MAJOR).$(VERSION_MINOR).$(VERSION_TINY)\"" >> src/config.h
	@if [ '$(USING_HILDON)' == 'true' ]; then echo "#define USING_HILDON" >> src/config.h; fi;
	@if [ '$(USING_GTK_BUILDER)' == 'true' ]; then echo "#define USING_GTK_BUILDER" >> src/config.h; fi;
	@if [ '$(USING_READLINE)' == 'true' ]; then echo "#define USING_READLINE" >> src/config.h; fi;
	@echo Generated config.h

${APP_OBJ}: ${APP_HEADERS} config.mk

${IMPORTCSV_OBJ}: ${IMPORTCSV_HEADERS} config.mk

${CONSOLE_OBJ}: ${CONSOLE_HEADERS} config.mk

${TEST_OBJ}: ${TEST_HEADERS} config.mk

sqlpilot: ${APP_OBJ}
	${LD} -o $@ ${APP_OBJ} ${LDFLAGS}
#	@strip $@

importcsv: ${IMPORTCSV_OBJ}
	${LD} -o $@ ${IMPORTCSV_OBJ} ${LDFLAGS}
#	@strip $@

console: ${CONSOLE_OBJ}
	${LD} -o $@ ${CONSOLE_OBJ} ${LDFLAGS}
#	@strip $@

ui: data/ui/interface.xml

data/ui/interface.xml: $(UI_GLADE) config.mk
ifeq ($(USING_GTK_BUILDER),true)
	sed 's/<property name="response_id">0<\/property>//g' $(UI_GLADE) > data/ui/sqlpilot.glade.tmp;
	sed 's/<requires-version lib="gtk+" version="2.12"\/>//g' $(UI_GLADE) > data/ui/sqlpilot.glade.tmp;
	$(PYTHON) `which gtk-builder-convert` data/ui/sqlpilot.glade.tmp data/ui/interface.xml;
	rm data/ui/sqlpilot.glade.tmp;
else
	cp $(UI_GLADE) data/ui/interface.xml;
endif


etags:
	etags.emacs `find -name "*.[h|c]"`

run: sqlpilot
	./sqlpilot logbook.db

clean:
	-rm -f `find -name '*.o'`
	-rm -f core sqlpilot console importcsv *_test test.db data/ui/interface.xml
	-rm -f src/config.h

wc:
	@wc `find -name '*.c'` `find -name '*.h'`

db-reset: db/logbook.sql
	-rm -f logbook.db
	cat db/logbook.sql | ./console logbook.db

db-reload: db-reset
	-awk -f db/airports/airports.awk db/airports/airports.csv | sqlite3 logbook.db
#	cat ~/logbook/save.sql | sqlite3 logbook.db
#	./importcsv ~/logbook/_finished.csv logbook.db


test: $(unit)_test

test-run: test
	@printf "### Running $(unit)_test ###\n"
	@rm -f test.db
	@if [ -f test/fixtures/$(unit).sql ]; then sqlite3 test.db "`cat test/fixtures/$(unit).sql`"; fi;
	@./$(unit)_test
	@printf "\n"

$(unit)_test: ${TEST_OBJ}
	${LD} -o $@ ${TEST_OBJ} ${LDFLAGS}

